{"pages":[],"posts":[{"title":"2019-10-7","text":"Autumn is around the corner:Keep moving forward, looking for summer internship what I want to do: do more leetcode practice get a good grade ( ML, Database ) work hard to finish school project (build a website, visualize data) やさしさに包まれたなら other pictures:","link":"/2019/10/07/2019-10-7/"},{"title":"2019/9/27","text":"I draw in my free time","link":"/2019/09/27/2019-9-27/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/09/27/hello-world/"},{"title":"About me","text":"My name is Chun Hua LuMy major is applied data science, and my bachelor degree is in computer science I love to draw and write blog in my free time. I have experience in data science, computer networking, web development. Nice to meet you. programming languages I use python (pandas, numpy, matplotlib, sklearn) C++ web technology frontend (html, css, javascript) backend (node.js) special library (simpleWebrtc, socket.io) git matlab C# (Unity) Java (processing) major courses ongoing : INF 551 Foundations of Data Management :Firebase, JSON, Hadoop, Spark, SQL, NoSQL, Amazon AWS INF 552 Machine Learning for Data :Use python to implement and analyze Machine Learning algorithms","link":"/2019/10/01/About-me/"},{"title":"python_sort","text":"Python sorting sorted() : returns a new listlist.sort() : modifies the list in-place and only defined for list Let’s look at some example :using sorted() 123example = [7,4,3,1,2]sorted(example)print(example) example not ordered after calling sorted:output : 7, 4, 3, 1, 2 12after_sort = sorted(example)print(after_sort) assign to new list after_sortoutput : 1, 2, 3, 4, 7 using list.sort() 1example.sort() output is sorted : 1, 2, 3, 4, 7 using itemgetter() 1234from operator import itemgetterstudent = [[\"D\",10],[\"C\",10],[\"B\",10],[\"A\",10],[\"G\",4]]student.sort(key=itemgetter(1,0))print(student) first order by number (itemgetter(1))then order by alphabet ( itemgetter(0))output : [[‘G’, 4], [‘A’, 10], [‘B’, 10], [‘C’, 10], [‘D’, 10]] hackerrank : 1234567891011121314151617181920from operator import itemgetterstore_stu = []min = 1000if __name__ == '__main__': for _ in range(int(input())): name = input() score = float(input()) if score &lt; min: min = score store_stu.append([name,score] ) store_stu = sorted(store_stu, key = itemgetter(1,0) ) flag_small = 0 for i,j in store_stu: if j &gt; min and flag_small==0: flag_small = j if flag_small == 0: flag_small = min for i,j in store_stu: if j == flag_small: print(i)","link":"/2019/10/05/python-sort/"},{"title":"lintcode-615","text":"description : lintcode 615 topology sorting dag (directed acyclic graph) =&gt; G = ( V, E ) linear ordering no cycle topology sort (G) store neighbor in dictionary edge compute indegree find node where indegree == 0 &amp; add to queue use bfs ( add 1 to count visited node, and decrease indegree by 1 ) if indegree of beighbor node reduce to 0 add into queue solution : 615 solution G = (V, E)time analysis: O (V+E)","link":"/2019/09/30/lintcode-615/"}],"tags":[{"name":"drawing","slug":"drawing","link":"/tags/drawing/"},{"name":"AboutMe","slug":"AboutMe","link":"/tags/AboutMe/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"algorithm","slug":"algorithm","link":"/tags/algorithm/"},{"name":"lintcode","slug":"lintcode","link":"/tags/lintcode/"}],"categories":[]}